{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nvar bankBalance = 3;\nbankBalance = bankBalance + 2;\nconsole.log(bankBalance + 2);\nconsole.log(bankBalance);\n\n// prettier-ignore\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in minutes\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\n// Child classes\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration); // Initiallizes the this keyword\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration); // Initiallizes the this keyword\n    this.elevationGain = elevationGain;\n    this.type = 'cycling';\n    this.clasSpeed();\n    this._setDescription();\n  }\n\n  clasSpeed() {\n    // km.h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\nconst run1 = new Running([39, -12], 5.2, 24, 178);\nconst cycling1 = new Cycling([39, -12], 27, 95, 523);\n// console.log(run1, cycling1);\n\n///////////////////////////////////////////////////////////////////////////////\n// APPLICATION ARCHITECTURE\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\nclass App {\n  // Private instance properties; they are properties that will be in all the instances\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    // Get user's position\n    this._getPosition();\n\n    // Get data from local storage\n    this._getLocalStorage();\n\n    // Attach event handlers\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    inputType.addEventListener('change', this._toggleElevationField);\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n  }\n\n  _getPosition() {\n    // Getting user's location with geolocation\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert(`Could not get your position.`);\n        }\n      );\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n\n    const coords = [latitude, longitude];\n\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel); // The '13' is the defult zoom on the map.\n\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    // Handling clicks on map\n    this.#map.on('click', this._showForm.bind(this));\n\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus(); // This will add the courser right away for typing.\n  }\n\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value =\n      inputDuration.value =\n      inputCadence.value =\n      inputElevation.value =\n        '';\n\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    // helper functions\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // Get data from the form\n    const type = inputType.value;\n    const distance = +inputDistance.value; // '+' converts it to a number\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng; // What is going on here? Need practice on destrocturing.\n    let workout;\n\n    // If activity running, create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      // Check if data is valid; use guard clause\n      if (\n        // !Number.isFinite(distance) ||\n        // !Number.isFinite(duration) ||\n        // !Number.isFinite(cadence)\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert(`Inputs have to be positive numbers!`);\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If activity cycling, create cycling object\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert(`Inputs have to be positive numbers!`);\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // Add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as maker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout on list\n    this._renderWorkout(workout);\n\n    // Hide form + clear input fields + Clear input fields\n    this._hideForm();\n\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n    <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n          <h2 class=\"workout__title\">${workout.description}</h2>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">${\n              workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n            }</span>\n            <span class=\"workout__value\">${workout.distance}</span>\n            <span class=\"workout__unit\">km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⏱</span>\n            <span class=\"workout__value\">${workout.duration}</span>\n            <span class=\"workout__unit\">min</span>\n          </div>`;\n\n    if (workout.type === 'running')\n      html += `\n      <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>`;\n\n    if (workout.type === 'cycling')\n      html += `\n        <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n            <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n            <span class=\"workout__icon\">⛰</span>\n            <span class=\"workout__value\">${workout.elevationGain}</span>\n            <span class=\"workout__unit\">m</span>\n        </div>\n        </li>`;\n\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _moveToPopup(e) {\n    const workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n\n    // Using the public interface\n    // workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('workout', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workout'));\n\n    if (!data) return;\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem('workout');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":["bankBalance","console","log","months","Workout","coords","distance","duration","_defineProperty","this","Date","now","slice","key","description","concat","type","toUpperCase","date","getMonth","getDate","clicks","Running","cadence","_assertThisInitialized","_this","calcPace","_setDescription","pace","Cycling","elevationGain","clasSpeed","speed","run1","cycling1","form","document","querySelector","containerWorkouts","inputType","inputDistance","inputDuration","inputCadence","inputElevation","_map","WeakMap","_mapZoomLevel","_mapEvent","_workouts","App","_classPrivateFieldInit","_getPosition","_getLocalStorage","addEventListener","_newWorkout","bind","_toggleElevationField","_moveToPopup","navigator","geolocation","getCurrentPosition","_loadMap","alert","position","latitude","longitude","L","map","setView","_classPrivateFieldGet","tileLayer","attribution","addTo","on","_showForm","forEach","work","_renderWorkoutMarker","mapE","classList","remove","focus","value","style","display","add","setTimeout","closest","toggle","e","validInputs","inputs","Array","_len","_key","arguments","every","inp","Number","isFinite","allPositive","preventDefault","workout","_latlng","latlng","lat","lng","elevation","push","_renderWorkout","_hideForm","_setLocalStorage","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","html","id","toFixed","insertAdjacentHTML","workoutEl","target","find","dataset","animate","pan","localStorage","setItem","JSON","stringify","data","parse","getItem","removeItem","location","reload","app"],"version":3,"file":"index.8a10b47c.js.map"}